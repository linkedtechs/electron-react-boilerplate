const {app, BrowserWindow} = require('electron')

// import * as isDev from 'electron-is-dev';
// import * as path from 'path';
// import * as url from 'url';
const isDev = require( 'electron-is-dev');
const path = require('path');
const url  = require('url');

let mainWindow;
debugger;

console.log(url.format({
	pathname: path.join(__dirname, 'index.html'),
	protocol: 'file:',
	slashes: true
	}));

if (isDev) {
	console.log('Running in development');
} else {
	console.log('Running in production');
}

function createWindow() {
	mainWindow = new BrowserWindow({
		width: 800,
		height: 600,
		webPreferences: {
			nodeIntegration: true,
		},
	});
	mainWindow.webContents.openDevTools()
	mainWindow.loadURL(url.format({
		pathname: path.join(__dirname, 'index.html'),
		protocol: 'file:',
		slashes: true
		}));
}

app.on('ready', createWindow);

app.on("closed", () => {
	// Dereference the window object, usually you would store windows
	// in an array if your app supports multi windows, this is the time
	// when you should delete the corresponding element.
	console.log('closed');
	mainWindow = null;
  });

  app.on('activate', () => {
	// On OS X it's common to re-create a window in the app when the
	// dock icon is clicked and there are no other windows open.
	console.log('activated');
	if (mainWindow === null) {
		createWindow();
	}
});